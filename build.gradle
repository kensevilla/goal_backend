buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
		classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:6.0.6"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "org.flywaydb.flyway"

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

flyway {
	println "Environment is set to " + System.getenv('ENV')
	url = 'jdbc:mysql://localhost:3306'
	user = 'root'
	password = ''
	schemas = ['goal']
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	compileOnly 'org.flywaydb:flyway-core'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.0.0')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.0.0')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.0')
	testCompile 'org.assertj:assertj-core:3.10.0'
	testCompile 'org.mockito:mockito-core:2.+'

    runtime('mysql:mysql-connector-java:5.1.34')
}

test {
	useJUnitPlatform()
}
